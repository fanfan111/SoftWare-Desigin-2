#pragma once
#pragma comment(lib,"advapi32.lib")

#include <winsvc.h> 
#include <winioctl.h>

#define	DEVICE_NAME			 L"\\\\.\\KeyboardVT"
#define	DEVICE_NAME_R0		 L"\\\\.\\KeyboardFilter"

#define IOCTL_CMD_READ_KEY	 		 	 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x800, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_CMD_START_INTERCEPT	 	 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x801, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_CMD_STOP_INTERCEPT		 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x802, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_CMD_GLOBAL_RUN			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x803, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_CMD_GLOBAL_STOP			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x804, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_CMD_READ_INTERCEPT_KEY	 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x805, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_CMD_CLEAN_MONITOR			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x806, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_CMD_STATUS				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x807, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_CMD_CATCH_PAUSE_STATUS	 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x808, METHOD_BUFFERED, FILE_ANY_ACCESS)

class DriverLoader
{
public:
	DriverLoader();
	~DriverLoader();
public:
	DWORD m_dwLastError;
	PCHAR m_pSysPath;
	PCHAR m_pServiceName;
	PCHAR m_pDisplayName;
	SC_HANDLE m_hSCManager;
	SC_HANDLE m_hService;
public:
	BOOL Install(PCHAR pSysPath,PCHAR pServiceName,PCHAR pDisplayName);
	BOOL Start();
	BOOL Stop(PCHAR pServiceName);
	BOOL Remove();

	static BOOL isDriverLoaded();
	static BOOL isDriverLoadedR0();
private:
	BOOL GetSvcHandle(PCHAR pServiceName);
};

